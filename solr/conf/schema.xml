<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
	Schema for Germania Sacra project data.
	
	2013 Sven-S. Porst, SUB GÃ¶ttingen <porst@sub.uni-goettingen.de>
-->
<schema name="germania-sacra" version="1.5">

	<fields>
		<!--
			Valid attributes for fields:
			name: mandatory - the name for the field
			type: mandatory - the name of a field type from the 
				<types> fieldType section
			indexed: true if this field should be indexed (searchable or sortable)
			stored: true if this field should be retrievable
			multiValued: true if this field may contain multiple values per document
			omitNorms: (expert) set to true to omit the norms associated with
				this field (this disables length normalization and index-time
				boosting for the field, and saves some memory).  Only full-text
				fields or fields that need an index-time boost need norms.
				Norms are omitted for primitive (non-analyzed) types by default.
			termVectors: [false] set to true to store the term vector for a
				given field.
				When using MoreLikeThis, fields used for similarity should be
				stored for best performance.
			termPositions: Store position information with the term vector.  
				This will increase storage costs.
			termOffsets: Store offset information with the term vector. This 
				will increase storage costs.
			required: The field is required.  It will throw an error if the
				value does not exist
			default: a value that should be used if no value is specified
				when adding a document.
		-->
		<!--
			field names should consist of alphanumeric or underscore characters only and
			not start with a digit.  This is not currently strictly enforced,
			but other field names will not have first class support from all components
			and back compatibility is not guaranteed.  Names with both leading and
			trailing underscores (e.g. _version_) are reserved.
		-->
		<field name="id" type="string" indexed="true" stored="true" required="true" multiValued="false"/>
		
		<field name="sql_tabelle" type="string" indexed="true" stored="true"/>
		<field name="sql_uid" type="int" indexed="true" stored="true"/>
		<field name="typ" type="string" indexed="true" stored="true"/>
        
		<field name="patrozinium" type="text_de" indexed="true" stored="true"/>
		<field name="kloster" type="text_de" indexed="true" stored="true"/>
		<field name="kloster_id" type="string" indexed="true" stored="true"/>
		<field name="bearbeitungsstatus" type="string" indexed="true" stored="true" multiValued="false"/>
		<field name="personallistenstatus" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="bemerkung_kloster" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="von" type="int" indexed="true" stored="true" multiValued="false"/>
		<field name="bis" type="int" indexed="true" stored="true" multiValued="false"/>

		<field name="text_gs_band" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="band_nummer" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="band_sortierung" type="int" indexed="true" stored="true" multiValued="true"/>
		<field name="band_facet" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="band_seite" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="band_titel" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="band_kurztitel" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="band_id" type="int" indexed="true" stored="true" multiValued="true"/>
		<field name="band_url" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="band_url_seitengenau" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="kloster_status" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="gruender" type="text_de" indexed="true" stored="true" multiValued="true"/>

		<field name="literatur_citekey" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="literatur_beschreibung" type="string" indexed="true" stored="true" multiValued="true"/>

		<field name="url" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="url_bemerkung" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="url_detail" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="url_typ" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="url_relation" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="url_quelle" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="url_quelle_titel" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="gnd" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="url_wikipedia" type="string" indexed="true" stored="true" multiValued="true"/>

		<field name="geonames" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="koordinaten" type="location_rpt" indexed="true" stored="true" multiValued="true"/>
		<field name="koordinaten_institutionengenau" type="boolean" indexed="true" stored="true" multiValued="true"/>
		<field name="geohash" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="ort" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="ort_uid" type="int" indexed="true" stored="true" multiValued="true"/>
		<field name="ort_sort" type="text_general" indexed="true" stored="true" multiValued="false"/>
		<field name="gemeinde" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="kreis" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="land" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="ist_in_deutschland" type="boolean" indexed="true" stored="true" multiValued="true"/>
		<field name="wuestung" type="boolean" indexed="true" stored="true" multiValued="true"/>
		<field name="bemerkung_standort" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="bemerkung_kloster_standort" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="standort_uid" type="int" indexed="true" stored="true" multiValued="true"/>

		<field name="bistum" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="bistum_uid" type="int" indexed="true" stored="true" multiValued="true"/>
		<field name="bistum_gnd" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="bistum_wikipedia" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="kirchenprovinz" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="ist_erzbistum" type="boolean" indexed="true" stored="true" multiValued="true"/>

		<field name="orden" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="orden_gnd" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="orden_wikipedia" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="orden_graphik" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="orden_ordo" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="orden_symbol" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="orden_typ" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="bemerkung_orden" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="kloster_orden_uid" type="int" indexed="true" stored="true" multiValued="true"/>

		<field name="orden_standort_von" type="int" indexed="true" stored="true" multiValued="true"/>
		<field name="orden_standort_bis" type="int" indexed="true" stored="true" multiValued="true"/>
		<field name="orden_standort_jahr50" type="int" indexed="true" stored="false" multiValued="true"/>

		<field name="orden_von_von" type="int" indexed="true" stored="true" multiValued="true"/>
		<field name="orden_von_bis" type="int" indexed="true" stored="true" multiValued="true"/>
		<field name="orden_von_verbal" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="orden_bis_von" type="int" indexed="true" stored="true" multiValued="true"/>
		<field name="orden_bis_bis" type="int" indexed="true" stored="true" multiValued="true"/>
		<field name="orden_bis_verbal" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="orden_jahr50" type="int" indexed="true" stored="false" multiValued="true"/>
		<field name="standort_von_von" type="int" indexed="true" stored="true" multiValued="true"/>
		<field name="standort_von_bis" type="int" indexed="true" stored="true" multiValued="true"/>
		<field name="standort_von_verbal" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="standort_bis_von" type="int" indexed="true" stored="true" multiValued="true"/>
		<field name="standort_bis_bis" type="int" indexed="true" stored="true" multiValued="true"/>
		<field name="standort_bis_verbal" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="standort_jahr50" type="int" indexed="true" stored="false" multiValued="true"/>

		<field name="jahr50" type="int" indexed="true" stored="false" multiValued="true"/>

		<field name="zeitraum_von_von" type="int" indexed="true" stored="false" multiValued="true"/>
		<field name="zeitraum_von_bis" type="int" indexed="true" stored="false" multiValued="true"/>
		<field name="zeitraum_von_verbal" type="string" indexed="true" stored="false" multiValued="true"/>
		<field name="zeitraum_bis_von" type="int" indexed="true" stored="false" multiValued="true"/>
		<field name="zeitraum_bis_bis" type="int" indexed="true" stored="false" multiValued="true"/>
		<field name="zeitraum_bis_verbal" type="string" indexed="true" stored="false" multiValued="true"/>
		<field name="zeitraum_jahr50" type="int" indexed="true" stored="false" multiValued="true"/>
		<field name="zeitraum_uid" type="int" indexed="true" stored="true" multiValued="true"/>

		<field name="person_name" type="text_de" indexed="true" stored="true" multiValued="true" termVectors="true" termPositions="true" termOffsets="true"/>
		<field name="person_vorname" type="text_de" indexed="true" stored="false" multiValued="true" termVectors="true" termPositions="true" termOffsets="true"/>
		<field name="person_namensalternativen" type="text_de" indexed="true" stored="true" multiValued="true" termVectors="true" termPositions="true" termOffsets="true"/>
		<field name="person_anmerkung" type="text_de" indexed="true" stored="true" multiValued="true" termVectors="true" termPositions="true" termOffsets="true"/>
		<field name="person_bezeichnung" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="person_bezeichnung_plural" type="text_de" indexed="true" stored="true" multiValued="true"/>
		<field name="person_von_verbal" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="person_bis_verbal" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="person_von" type="int" indexed="true" stored="true" multiValued="true"/>
		<field name="person_bis" type="int" indexed="true" stored="true" multiValued="true"/>
		<field name="person_verbal" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="person_gnd" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="person_gso" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="person_office_id" type="string" indexed="true" stored="true" multiValued="true"/>

		<field name="bemerkung" type="text_de" indexed="true" stored="true" multiValued="true"/>

		<dynamicField name="*_facet" type="string" indexed="true" stored="true" multiValued="true"/>
		<dynamicField name="*_suggest" type="phrase_suggest" indexed="true" stored="true" multiValued="true"/>

		<field name="text" type="text_de" indexed="true" stored="false" multiValued="true"/>
		<field name="_version_" type="long" indexed="true" stored="true"/>


		<!--
			uncomment the following to ignore any fields that don't already match an existing
			field name or dynamic field, rather than reporting them as an error.
			alternately, change the type="ignored" to some other type e.g. "text" if you want
			unknown fields indexed and/or stored by default
		-->
		<!--<dynamicField name="*" type="ignored" multiValued="true"/>-->

	</fields>
	
	

	<!--
		Field used to determine and enforce document uniqueness.
		Unless this field is marked with required="false", it will be a required field
	-->
	<uniqueKey>id</uniqueKey>


	<!--
		Copy fields.
	-->
	<copyField source="kloster_id" dest="text"/>
	<copyField source="url" dest="text"/>

	<copyField source="patrozinium" dest="text"/>
	<copyField source="kloster" dest="text"/>
	<copyField source="text_gs_band" dest="text"/>
	<copyField source="band_nummer" dest="text"/>
	<copyField source="band_titel" dest="text"/>
	<copyField source="gruender" dest="text"/>
	<copyField source="gnd" dest="text"/>
<!--	<copyField source="geonames" dest="text"/> -->
	<copyField source="koordinaten" dest="text"/>
	<copyField source="ort" dest="text"/>
	<copyField source="gemeinde" dest="text"/>
	<copyField source="kreis" dest="text"/>
	<copyField source="land" dest="text"/>
	<copyField source="bistum" dest="text"/>
<!--	<copyField source="kirchenprovinz" dest="text"/> -->
	<copyField source="orden" dest="text"/>
<!--	<copyField source="orden_ordo" dest="text"/> -->
	<copyField source="orden_typ" dest="text"/>
	<copyField source="person_name" dest="text"/>
	<copyField source="person_namensalternativen" dest="text"/>
	<copyField source="person_bezeichnung" dest="text"/>
	<copyField source="person_gso" dest="text"/>

	<copyField source="bemerkung_kloster" dest="bemerkung"/>
	<copyField source="bemerkung_standort" dest="bemerkung"/>
	<copyField source="bemerkung_kloster_standort" dest="bemerkung"/>
	<copyField source="bemerkung_orden" dest="bemerkung"/>
	<copyField source="bemerkung_kloster" dest="text"/>
	<copyField source="bemerkung_standort" dest="text"/>
	<copyField source="bemerkung_kloster_standort" dest="text"/>
	<copyField source="bemerkung_orden" dest="text"/>

	<copyField source="orden_von_von" dest="zeitraum_von_von"/>
	<copyField source="orden_von_bis" dest="zeitraum_von_bis"/>
	<copyField source="orden_von_verbal" dest="zeitraum_von_verbal"/>
	<copyField source="orden_bis_von" dest="zeitraum_bis_von"/>
	<copyField source="orden_bis_bis" dest="zeitraum_bis_von"/>
	<copyField source="orden_bis_verbal" dest="zeitraum_bis_verbal"/>
	<copyField source="standort_von_von" dest="zeitraum_von_von"/>
	<copyField source="standort_von_bis" dest="zeitraum_von_bis"/>
	<copyField source="standort_von_verbal" dest="zeitraum_von_verbal"/>
	<copyField source="standort_bis_von" dest="zeitraum_bis_von"/>
	<copyField source="standort_bis_bis" dest="zeitraum_bis_von"/>
	<copyField source="standort_bis_verbal" dest="zeitraum_bis_verbal"/>
	<copyField source="orden_von_verbal" dest="text"/>
	<copyField source="orden_bis_verbal" dest="text"/>
	<copyField source="standort_von_verbal" dest="text"/>
	<copyField source="standort_bis_verbal" dest="text"/>

	<!-- <copyField source="orden" dest="orden_facet"/> Ordensfacette wird (leicht anders) im Indexierungsskript gefÃ¼llt -->
	<copyField source="bistum" dest="bistum_facet"/>
	<copyField source="land" dest="land_facet"/>
	<copyField source="kloster_status" dest="status_facet"/>
	
	<copyField source="kloster" dest="all_suggest"/>
	<copyField source="ort" dest="all_suggest"/>
	<copyField source="gemeinde" dest="all_suggest"/>
	<copyField source="kreis" dest="all_suggest"/>
	<copyField source="bistum" dest="all_suggest"/>
	<copyField source="orden" dest="all_suggest"/>

	<copyField source="kloster" dest="klostername_suggest"/>
	<copyField source="bistum" dest="bistum_suggest"/>
	<copyField source="orden" dest="orden_suggest"/>
	<copyField source="ort" dest="ort_suggest"/>
	
	


	<types>
		<!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
		<fieldType name="string" class="solr.StrField" sortMissingLast="true"/>

		<!-- boolean type: "true" or "false" -->
		<fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
		
		<!-- Default numeric field types. -->
		<fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>
		<fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>
		<fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
		<fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>

		<!--
			The format for this date field is of the form 1995-12-31T23:59:59Z, and
			is a more restricted form of the canonical representation of dateTime
			http://www.w3.org/TR/xmlschema-2/#dateTime
			The trailing "Z" designates UTC time and is mandatory.
			Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
			All other components are mandatory.

			Expressions can also be used to denote calculations that should be
			performed relative to "NOW" to determine the value, ie...

			      NOW/HOUR
			         ... Round to the start of the current hour
			      NOW-1DAY
			         ... Exactly 1 day prior to now
			      NOW/DAY+6MONTHS+3DAYS
			         ... 6 months and 3 days in the future from the start of
			             the current day
			             
			Consult the DateField javadocs for more information.

			Note: For faster range queries, consider the tdate type
		-->
		<fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>
		<!-- A Trie based date field for faster date range queries and date faceting. -->
		<fieldType name="tdate" class="solr.TrieDateField" precisionStep="6" positionIncrementGap="0"/>


		<!--
			solr.TextField allows the specification of custom text analyzers
			specified as a tokenizer and a list of token filters. Different
			analyzers may be specified for indexing and querying.

			The optional positionIncrementGap puts space between multiple fields of
			this type on the same document, with the purpose of preventing false phrase
			matching across fields.

			For more info on customizing your analyzer chain, please see
			http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
		-->
		<!--
			One can also specify an existing Analyzer class that has a
			default constructor via the class attribute on the analyzer element.
			Example:
			<fieldType name="text_greek" class="solr.TextField">
				<analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
			</fieldType>
		-->
		
		
		<!-- A text field that only splits on whitespace for exact matching of words -->
		<fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
			</analyzer>
		</fieldType>
		
		
		<!--
			A general text field that has reasonable, generic
			cross-language defaults: it tokenizes with StandardTokenizer,
			removes stop words from case-insensitive "stopwords.txt"
			(empty by default), and down cases.  At query time only, it
			also applies synonyms.
		-->
		<fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true"/>
				<!-- in this example, we will only use synonyms at query time
					<filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
				-->
				<filter class="solr.LowerCaseFilterFactory"/>
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true"/>
				<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
				<filter class="solr.LowerCaseFilterFactory"/>
			</analyzer>
		</fieldType>
		
		
		<!--
			From:
			http://svn.apache.org/repos/asf/lucene/dev/branches/lucene_solr_4_3/solr/core/src/test-files/solr/collection1/conf/schema-phrasesuggest.xml
		-->
		<fieldtype name="phrase_suggest" class="solr.TextField">
			<analyzer>
				<tokenizer class="solr.KeywordTokenizerFactory"/>
				<filter class="solr.PatternReplaceFilterFactory"
						pattern="([^\p{L}\p{M}\p{N}\p{Cs}]*[\p{L}\p{M}\p{N}\p{Cs}\_]+:)|([^\p{L}\p{M}\p{N}\p{Cs}])+"
						replacement=" " replace="all"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.TrimFilterFactory"/>
			</analyzer>
		</fieldtype>
		
		
		<!--
			A text field with defaults appropriate for English: it
			(lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
			finally applies Porter's stemming.  The query time analyzer
			also applies synonyms from synonyms.txt.
		-->
		<fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<!-- in this example, we will only use synonyms at query time
					<filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
				-->
				<!--
					Case insensitive stop word removal.
					add enablePositionIncrements=true in both the index and query
					analyzers to leave a 'gap' for more accurate phrase queries.
				-->
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" enablePositionIncrements="true"/>
				<filter class="solr.LowerCaseFilterFactory"/>
								<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
				<!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
					<filter class="solr.EnglishMinimalStemFilterFactory"/>
				-->
				<filter class="solr.PorterStemFilterFactory"/>
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" enablePositionIncrements="true"/>
				<filter class="solr.LowerCaseFilterFactory"/>
								<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
				<!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
					<filter class="solr.EnglishMinimalStemFilterFactory"/>
				-->
				<filter class="solr.PorterStemFilterFactory"/>
			</analyzer>
		</fieldType>
		
		
		<!--
			A text field with defaults appropriate for English, plus
			aggressive word-splitting and autophrase features enabled.
			This field is just like text_en, except it adds
			WordDelimiterFilter to enable splitting and matching of
			words on case-change, alpha numeric boundaries, and
			non-alphanumeric chars.  This means certain compound word
			cases will work, for example query "wi fi" will match
			document "WiFi" or "wi-fi".
		-->
		<fieldType name="text_en_splitting" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
			<analyzer type="index">
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<!-- in this example, we will only use synonyms at query time
					<filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
				-->
				<!--
					Case insensitive stop word removal.
					add enablePositionIncrements=true in both the index and query
					analyzers to leave a 'gap' for more accurate phrase queries.
				-->
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" enablePositionIncrements="true"/>
				<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
				<filter class="solr.PorterStemFilterFactory"/>
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt" enablePositionIncrements="true"/>
				<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
				<filter class="solr.PorterStemFilterFactory"/>
			</analyzer>
		</fieldType>
		
		
		<!--
			Less flexible matching, but less false matches.  Probably not ideal for product names,
			but may be good for SKUs.  Can insert dashes in the wrong place and still match.
		-->
		<fieldType name="text_en_splitting_tight" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
			<analyzer>
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
				<filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0" catenateWords="1" catenateNumbers="1" catenateAll="0"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
				<filter class="solr.EnglishMinimalStemFilterFactory"/>
				<!--
					this filter can remove any duplicate tokens that appear at the same position - sometimes
					possible with WordDelimiterFilter in conjuncton with stemming.
				-->
				<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
			</analyzer>
		</fieldType>
		
		
		<!--
			Just like text_general except it reverses the characters of
			each token, to enable more efficient leading wildcard queries.
		-->
		<fieldType name="text_general_rev" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.ReversedWildcardFilterFactory" withOriginal="true" maxPosAsterisk="3" maxPosQuestion="2" maxFractionAsterisk="0.33"/>
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true"/>
				<filter class="solr.LowerCaseFilterFactory"/>
			</analyzer>
		</fieldType>
		
		
		<!--
			since fields of this type are by default not stored or indexed,
			any data added to them will be ignored outright.
		-->
		<fieldtype name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField"/>
		
		
        <!--
            An alternative geospatial field type new to Solr 4.  It supports multiValued and polygon shapes.
            For more information about this and other Spatial fields new to Solr 4, see:
            http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4
        -->
        <fieldType name="location_rpt" class="solr.SpatialRecursivePrefixTreeFieldType"
                    geo="true" distErrPct="0.025" maxDistErr="0.000009" units="degrees" />

		
		<!-- German -->
		<fieldType name="text_de" class="solr.TextField" positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_de.txt" format="snowball" enablePositionIncrements="true"/>
				<filter class="solr.GermanNormalizationFilterFactory"/>
				<filter class="solr.GermanMinimalStemFilterFactory"/>
				<!-- more aggressive: <filter class="solr.GermanLightStemFilterFactory"/> -->
				<!-- even more aggressive: <filter class="solr.SnowballPorterFilterFactory" language="German2"/> -->
			</analyzer>
		</fieldType>

	</types>

	<solrQueryParser defaultOperator="AND"/>
	
</schema>
